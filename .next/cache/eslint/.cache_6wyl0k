[{"C:\\Projects\\crud-next\\pages\\about.js":"1","C:\\Projects\\crud-next\\pages\\api\\blog.js":"2","C:\\Projects\\crud-next\\pages\\api\\hello.js":"3","C:\\Projects\\crud-next\\pages\\api\\user.js":"4","C:\\Projects\\crud-next\\pages\\api\\videosdetaills.js":"5","C:\\Projects\\crud-next\\pages\\blog\\index.js":"6","C:\\Projects\\crud-next\\pages\\blog\\[id].js":"7","C:\\Projects\\crud-next\\pages\\categories.js":"8","C:\\Projects\\crud-next\\pages\\desc\\[id]\\index.js":"9","C:\\Projects\\crud-next\\pages\\header.js":"10","C:\\Projects\\crud-next\\pages\\home.js":"11","C:\\Projects\\crud-next\\pages\\index.js":"12","C:\\Projects\\crud-next\\pages\\proddescription.js":"13","C:\\Projects\\crud-next\\pages\\products\\index.js":"14","C:\\Projects\\crud-next\\pages\\products\\[catid].js":"15","C:\\Projects\\crud-next\\pages\\video\\index.js":"16","C:\\Projects\\crud-next\\pages\\video\\playvideo.js":"17","C:\\Projects\\crud-next\\pages\\video\\[vidcat].js":"18","C:\\Projects\\crud-next\\pages\\videocat.js":"19","C:\\Projects\\crud-next\\pages\\_app.js":"20"},{"size":552,"mtime":1660461788134,"results":"21","hashOfConfig":"22"},{"size":208840,"mtime":1660735968925,"results":"23","hashOfConfig":"22"},{"size":170,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":6362,"mtime":1660538249623,"results":"25","hashOfConfig":"22"},{"size":2848,"mtime":1660503790958,"results":"26","hashOfConfig":"22"},{"size":3281,"mtime":1661275850576,"results":"27","hashOfConfig":"22"},{"size":2890,"mtime":1661193740287,"results":"28","hashOfConfig":"22"},{"size":2401,"mtime":1660504737292,"results":"29","hashOfConfig":"22"},{"size":3897,"mtime":1660490600121,"results":"30","hashOfConfig":"22"},{"size":2283,"mtime":1661194126615,"results":"31","hashOfConfig":"22"},{"size":484,"mtime":1660460642785,"results":"32","hashOfConfig":"22"},{"size":171,"mtime":1660460647262,"results":"33","hashOfConfig":"22"},{"size":479,"mtime":1660463682272,"results":"34","hashOfConfig":"22"},{"size":2023,"mtime":1660477229809,"results":"35","hashOfConfig":"22"},{"size":3070,"mtime":1660493153024,"results":"36","hashOfConfig":"22"},{"size":3417,"mtime":1660503166322,"results":"37","hashOfConfig":"22"},{"size":733,"mtime":1660505089589,"results":"38","hashOfConfig":"22"},{"size":4431,"mtime":1660504052384,"results":"39","hashOfConfig":"22"},{"size":2223,"mtime":1660495151703,"results":"40","hashOfConfig":"22"},{"size":184,"mtime":1660594317639,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h8ugl",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\crud-next\\pages\\about.js",[],[],"C:\\Projects\\crud-next\\pages\\api\\blog.js",[],[],"C:\\Projects\\crud-next\\pages\\api\\hello.js",[],[],"C:\\Projects\\crud-next\\pages\\api\\user.js",[],[],"C:\\Projects\\crud-next\\pages\\api\\videosdetaills.js",[],[],"C:\\Projects\\crud-next\\pages\\blog\\index.js",[],[],"C:\\Projects\\crud-next\\pages\\blog\\[id].js",[],[],"C:\\Projects\\crud-next\\pages\\categories.js",[],[],"C:\\Projects\\crud-next\\pages\\desc\\[id]\\index.js",[],[],"C:\\Projects\\crud-next\\pages\\header.js",[],[],"C:\\Projects\\crud-next\\pages\\home.js",[],[],"C:\\Projects\\crud-next\\pages\\index.js",[],[],"C:\\Projects\\crud-next\\pages\\proddescription.js",[],[],"C:\\Projects\\crud-next\\pages\\products\\index.js",[],[],"C:\\Projects\\crud-next\\pages\\products\\[catid].js",[],[],"C:\\Projects\\crud-next\\pages\\video\\index.js",["104","105"],[],"import Head from 'next/head';\r\nimport Header from '../header';\r\nimport { useRouter } from 'next/router'\r\nimport { Container, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { videos } from '../api/videosdetaills';\r\nimport { useState } from 'react';\r\nimport Playvideo from './playvideo';\r\nconst Videos = () => {\r\n    const [data, setData] = useState(videos);\r\n    const [runningvideo, setRunningvideo] = useState(videos.slice(0,1).map((item)=>item.url));\r\n    const router = useRouter();\r\n    const videoID = (videoID) => {\r\n        if(videoID && videoID!==''){\r\n            setRunningvideo(videoID);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Head>\r\n                <title>This is Video Main Page 2</title>\r\n                <meta name=\"description\" content=\"This is video main page description\" />\r\n                <link rel=\"icon\" href=\"/favicon.ico\" />\r\n            </Head>\r\n            <Header />\r\n\r\n            <div style={{ marginTop: '25px' }}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={9} style={{ border: 'solid gray 1px' }}>\r\n                            <Playvideo vidid={runningvideo} />\r\n                        </Col>\r\n                        <Col xs={3} style={{ border: 'solid gray 1px' }}>\r\n                            <div style={{ marginTop: '15px', textAlign: 'center', overflow:'scroll', height:'500px' }}>\r\n                                <Container>\r\n                                    {\r\n                                        data.map((item) => {\r\n                                            return <Row key={item.id} style={{marginTop:'20px', cursor:'pointer'}} onClick={()=>{videoID(`${item.url}`)}}>\r\n                                                <Col>\r\n                                                    <img src={`https://img.youtube.com/vi/${item.url}/mqdefault.jpg`} style={{ width: '100%' }} />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        })\r\n                                    }\r\n                                </Container>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n            {/* <Container style={{ marginTop: '20px' }} fluid>\r\n                <Row className=\"justify-content-center\">\r\n                    {\r\n                        data.map((item) => {\r\n                            return <Card style={{ width: '18rem', margin: '20px' }} key={item.id}>\r\n                                <Card.Body>\r\n                                    <Card.Text>\r\n                                        <img src={`https://img.youtube.com/vi/${item.url}/mqdefault.jpg`} style={{ width: '100%' }} />\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\" onClick={() => router.push(`/desc/${item.id}`)}>Read More</Button>\r\n                                </Card.Body>\r\n                                <Card.Footer>\r\n                                    <small className=\"text-muted\">{item.category}</small>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        })\r\n                    }\r\n                </Row>\r\n            </Container> */}\r\n        </div >\r\n    )\r\n}\r\nexport default Videos;","C:\\Projects\\crud-next\\pages\\video\\playvideo.js",[],[],"C:\\Projects\\crud-next\\pages\\video\\[vidcat].js",["106","107","108"],[],"import Head from 'next/head';\r\nimport Header from '../header';\r\nimport { useRouter } from 'next/router'\r\nimport { Container, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { videos } from '../api/videosdetaills';\r\nimport Playvideo from './playvideo';\r\nconst Dynamicdata = () => {\r\n    const [data, setData] = useState(videos)\r\n    const [latestvideo, setLatestvideo] = useState([])\r\n    const [runningvideo, setRunningvideo] = useState(\"\");\r\n    const router = useRouter()\r\n    const { vidcat } = router.query\r\n    useEffect(()=>{\r\n        if(vidcat && vidcat!==''){\r\n            if(data && data.length>0){\r\n                const updatevideos = data.filter((catvid)=>{\r\n                    return catvid.category === vidcat\r\n                })\r\n                const runvid = updatevideos.slice(0,1).map((item)=>{\r\n                    return item.url\r\n                })\r\n                setLatestvideo(updatevideos);\r\n                setRunningvideo(runvid);\r\n            }\r\n        }\r\n    }, [vidcat])\r\n    const videoID = (videoID) => {\r\n        if(videoID && videoID!==''){\r\n            setRunningvideo(videoID);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Head>\r\n                <title>{vidcat} Categories Videos</title>\r\n                <meta name=\"description\" content=\"This is category related videos main page description\" />\r\n                <link rel=\"icon\" href=\"/favicon.ico\" />\r\n            </Head>\r\n            <Header />\r\n            <div style={{ marginTop: '10px', fontSize: '25px', fontWeight: 'bold', textAlign: 'center' }}>\r\n                {vidcat}\r\n            </div>\r\n            <div style={{ marginTop: '10px' }}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={9} style={{ border: 'solid gray 1px' }}>\r\n                            <Playvideo vidid={runningvideo} />\r\n                        </Col>\r\n                        <Col xs={3} style={{ border: 'solid gray 1px' }}>\r\n                            <div style={{ marginTop: '15px', textAlign: 'center', overflow:'scroll', height:'475px' }}>\r\n                                <Container>\r\n                                    {\r\n                                        latestvideo.map((item) => {\r\n                                            return <Row key={item.id} style={{marginTop:'20px', cursor:'pointer'}} onClick={()=>{videoID(`${item.url}`)}}>\r\n                                                <Col>\r\n                                                    <img src={`https://img.youtube.com/vi/${item.url}/mqdefault.jpg`} style={{ width: '100%' }} />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        })\r\n                                    }\r\n                                </Container>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            {/*<Container style={{ marginTop: '10px' }} fluid>\r\n                <Row className=\"justify-content-center\">\r\n                    {\r\n                        latestvideo.map((item) => {\r\n                            return <Card style={{ width: '18rem', margin: '20px' }} key={item.id}>\r\n                                <Card.Body>\r\n                                    <Card.Text>\r\n                                        <iframe width=\"235\" height=\"235\" frameBorder=\"0\" allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope;\" src={`https://youtube.com/embed/${item.url}`}>\r\n                                        </iframe>\r\n                                        <img src={`https://img.youtube.com/vi/${item.url}/mqdefault.jpg`} style={{width:'100%'}} />\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\" onClick={() => router.push(`/desc/${item.id}`)}>Read More</Button>\r\n                                </Card.Body>\r\n                                <Card.Footer>\r\n                                    <small className=\"text-muted\">{item.category}</small>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        })\r\n                    }\r\n                </Row>\r\n                </Container>*/}\r\n        </div >\r\n    )\r\n}\r\nexport default Dynamicdata;","C:\\Projects\\crud-next\\pages\\videocat.js",[],[],"C:\\Projects\\crud-next\\pages\\_app.js",[],[],{"ruleId":"109","severity":1,"message":"110","line":39,"column":53,"nodeType":"111","endLine":39,"endColumn":147},{"ruleId":"112","severity":1,"message":"113","line":39,"column":53,"nodeType":"111","endLine":39,"endColumn":147},{"ruleId":"114","severity":1,"message":"115","line":27,"column":8,"nodeType":"116","endLine":27,"endColumn":16,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"110","line":57,"column":53,"nodeType":"111","endLine":57,"endColumn":147},{"ruleId":"112","severity":1,"message":"113","line":57,"column":53,"nodeType":"111","endLine":57,"endColumn":147},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["118"],{"desc":"119","fix":"120"},"Update the dependencies array to be: [data, vidcat]",{"range":"121","text":"122"},[1057,1065],"[data, vidcat]"]